def ArrayList: import "std".Types.ArrayList;

def realloc: import "std".Types.realloc;
def free: import "std".Types.free;

def Collect: fn[T] -> (fn[] -> Types.ArrayList(*Void)) {
    def SliceT: ArrayList(T.Item);

    return fn[base: *T] -> SliceT {
        def result: new SliceT;
        result.init();

        def sp: new T.Item;

        while (base.hasNext()) {
            sp = base.next();

            result.append(*sp);
        }

        return *result;
    }; 
};
